apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "chart.fullname" . }}
  labels:
    app: {{ template "chart.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "chart.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: config
          configMap:
            name: {{ template "chart.fullname" . }}
      containers:
        - name: test-client
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: config
              mountPath: /config
          command:
            {{- if .Values.config.debug }}
            - realm-test-client-dbg
            {{- else }}
            - realm-test-client
            {{- end }}
            - "{{ .Values.config.realmPath }}"
            - "{{ .Values.config.serverBaseUrl }}{{ .Values.config.virtualPath }}"
            - --log-level
            - "{{ .Values.config.logLevel }}"
            - --sync-log-level
            - "{{ .Values.config.syncLogLevel }}"
            - --abort-on-error
            - "{{ .Values.config.abortOnError }}"
            {{- if .Values.config.accessToken }}
            - --access-token
            - "{{ .Values.config.accessToken}}"
            {{- end }}
            - --username
            - "{{ .Values.config.username}}"
            - --password
            - "{{ .Values.config.password}}"
            - --num-transacts
            - "{{ .Values.config.numTransacts }}"
            - --transact-period
            - "{{ .Values.config.transactPeriod }}"
            - --max-transact-period
            - "{{ .Values.config.maxTransactPeriod }}"
            - --num-blobs
            - "{{ .Values.config.numBlobs }}"
            - --blob-size
            - "{{ .Values.config.blobSize }}"
            - --blob-label
            - "{{ .Values.config.blobLabel }}"
            - --blob-kind
            - "{{ .Values.config.blobKind }}"
            - --blob-level
            - "{{ .Values.config.blobLevel }}"
            - --max-blob-level
            - "{{ .Values.config.maxBlobLevel }}"
            {{- if .Values.config.replaceBlobs }}
            - --replace-blobs
            {{- end }}
            {{- if .Values.config.ensureBlobClass }}
            - --ensure-blob-class
            {{- end }}
            {{- if .Values.config.sendPropagationTimeRequests }}
            - --send-ptime-requests
            {{- end }}
            {{- if .Values.config.receivePropagationTimeRequests }}
            - --receive-ptime-requests
            {{- end }}
            - --ptime-request-threshold
            - "{{ .Values.config.propagationTimeRequestThreshold }}"
            {{- if .Values.config.ensurePropagationTimeClass }}
            - --ensure-ptime-class
            {{- end }}
            {{- if .Values.config.downloadFirst }}
            - --download-first
            {{- end }}
            - --follow
            - --num-peers
            - "{{ .Values.config.numPeers }}"
            - --num-growths
            - "{{ .Values.config.numGrowths }}"
            - --time-between-growths
            - "{{ .Values.config.timeBetweenGrowths }}"
            {{- if .Values.config.addQuery1 }}
            - --query-class
            - "{{ .Values.config.queryClass1 }}"
            - --add-query
            - "{{ .Values.config.addQuery1 }}"
            {{- end }}
            {{- if .Values.config.addQuery2 }}
            - --query-class
            - "{{ .Values.config.queryClass2 }}"
            - --add-query
            - "{{ .Values.config.addQuery2 }}"
            {{- end }}
            {{- if .Values.config.addQuery3 }}
            - --query-class
            - "{{ .Values.config.queryClass3 }}"
            - --add-query
            - "{{ .Values.config.addQuery3 }}"
            {{- end }}
            {{- if .Values.config.addQuery4 }}
            - --query-class
            - "{{ .Values.config.queryClass4 }}"
            - --add-query
            - "{{ .Values.config.addQuery4 }}"
            {{- end }}
            - --start-delay
            - "{{ .Values.config.startDelay }}"
            - --max-start-delay
            - "{{ .Values.config.maxStartDelay }}"
            {{- if .Values.config.connectionPerSession }}
            - --connection-per-session
            {{- end }}
            - --disable-sync-to-disk
            - --time-between-pings
            - "{{ .Values.config.timeBetweenPings }}"
            - --pong-timeout
            - "{{ .Values.config.pongTimeout }}"
            - --connect-timeout
            - "{{ .Values.config.connectTimeout }}"
            - --connection-linger-time
            - "{{ .Values.config.connectionLingerTime }}"
            {{- if .Values.config.tcpNoDelay }}
            - --tcp-no-delay
            {{- end }}
            - --metrics-prefix
            - "{{ .Values.config.metricsPrefix }}"
            {{- if .Values.config.reportRoundtripTimes }}
            - --report-roundtrip-times
            {{- end }}
            - --halt-on-crash
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: statsd-exporter
          image: "prom/statsd-exporter"
          imagePullPolicy: IfNotPresent
          args:
            - --statsd.listen-udp
            - :8125
          ports:
            - containerPort: 9102
              name: metrics
